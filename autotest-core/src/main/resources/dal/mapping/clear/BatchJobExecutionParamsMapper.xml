<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dal.dao.clear.BatchJobExecutionParamsDAO">
  <resultMap id="BaseResultMap" type="dal.model.clear.BatchJobExecutionParamsDO">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="JOB_EXECUTION_ID" jdbcType="BIGINT" property="jobExecutionId" />
    <result column="TYPE_CD" jdbcType="VARCHAR" property="typeCd" />
    <result column="KEY_NAME" jdbcType="VARCHAR" property="keyName" />
    <result column="STRING_VAL" jdbcType="VARCHAR" property="stringVal" />
    <result column="DATE_VAL" jdbcType="TIMESTAMP" property="dateVal" />
    <result column="LONG_VAL" jdbcType="BIGINT" property="longVal" />
    <result column="DOUBLE_VAL" jdbcType="DOUBLE" property="doubleVal" />
    <result column="IDENTIFYING" jdbcType="CHAR" property="identifying" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    JOB_EXECUTION_ID, TYPE_CD, KEY_NAME, STRING_VAL, DATE_VAL, LONG_VAL, DOUBLE_VAL, 
    IDENTIFYING
  </sql>
  <select id="selectByExample" parameterType="dal.model.clear.BatchJobExecutionParamsDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from batch_job_execution_params
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="dal.model.clear.BatchJobExecutionParamsDOExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from batch_job_execution_params
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="dal.model.clear.BatchJobExecutionParamsDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from batch_job_execution_params
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update batch_job_execution_params
    <set>
      <if test="record.jobExecutionId != null">
        JOB_EXECUTION_ID = #{record.jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="record.typeCd != null">
        TYPE_CD = #{record.typeCd,jdbcType=VARCHAR},
      </if>
      <if test="record.keyName != null">
        KEY_NAME = #{record.keyName,jdbcType=VARCHAR},
      </if>
      <if test="record.stringVal != null">
        STRING_VAL = #{record.stringVal,jdbcType=VARCHAR},
      </if>
      <if test="record.dateVal != null">
        DATE_VAL = #{record.dateVal,jdbcType=TIMESTAMP},
      </if>
      <if test="record.longVal != null">
        LONG_VAL = #{record.longVal,jdbcType=BIGINT},
      </if>
      <if test="record.doubleVal != null">
        DOUBLE_VAL = #{record.doubleVal,jdbcType=DOUBLE},
      </if>
      <if test="record.identifying != null">
        IDENTIFYING = #{record.identifying,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update batch_job_execution_params
    set JOB_EXECUTION_ID = #{record.jobExecutionId,jdbcType=BIGINT},
      TYPE_CD = #{record.typeCd,jdbcType=VARCHAR},
      KEY_NAME = #{record.keyName,jdbcType=VARCHAR},
      STRING_VAL = #{record.stringVal,jdbcType=VARCHAR},
      DATE_VAL = #{record.dateVal,jdbcType=TIMESTAMP},
      LONG_VAL = #{record.longVal,jdbcType=BIGINT},
      DOUBLE_VAL = #{record.doubleVal,jdbcType=DOUBLE},
      IDENTIFYING = #{record.identifying,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>