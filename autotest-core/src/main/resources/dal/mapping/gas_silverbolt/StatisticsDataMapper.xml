<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dal.dao.gas_silverbolt.StatisticsDataDAO">
  <resultMap id="BaseResultMap" type="dal.model.gas_silverbolt.StatisticsDataDO">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="spout_name" jdbcType="VARCHAR" property="spoutName" />
    <result column="model_name" jdbcType="VARCHAR" property="modelName" />
    <result column="row_key" jdbcType="VARCHAR" property="rowKey" />
    <result column="time_unit" jdbcType="TIMESTAMP" property="timeUnit" />
    <result column="raw_add_time" jdbcType="TIMESTAMP" property="rawAddTime" />
    <result column="raw_update_time" jdbcType="TIMESTAMP" property="rawUpdateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="dal.model.gas_silverbolt.StatisticsDataDO">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="statistic_data" jdbcType="LONGVARCHAR" property="statisticData" />
    <result column="groups" jdbcType="LONGVARCHAR" property="groups" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, spout_name, model_name, row_key, time_unit, raw_add_time, raw_update_time
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    statistic_data, groups
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="dal.model.gas_silverbolt.StatisticsDataDOExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from statistics_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="dal.model.gas_silverbolt.StatisticsDataDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from statistics_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="dal.model.gas_silverbolt.StatisticsDataDOExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from statistics_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="dal.model.gas_silverbolt.StatisticsDataDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from statistics_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update statistics_data
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.spoutName != null">
        spout_name = #{record.spoutName,jdbcType=VARCHAR},
      </if>
      <if test="record.modelName != null">
        model_name = #{record.modelName,jdbcType=VARCHAR},
      </if>
      <if test="record.rowKey != null">
        row_key = #{record.rowKey,jdbcType=VARCHAR},
      </if>
      <if test="record.timeUnit != null">
        time_unit = #{record.timeUnit,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawAddTime != null">
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null">
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statisticData != null">
        statistic_data = #{record.statisticData,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.groups != null">
        groups = #{record.groups,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update statistics_data
    set id = #{record.id,jdbcType=BIGINT},
      spout_name = #{record.spoutName,jdbcType=VARCHAR},
      model_name = #{record.modelName,jdbcType=VARCHAR},
      row_key = #{record.rowKey,jdbcType=VARCHAR},
      time_unit = #{record.timeUnit,jdbcType=TIMESTAMP},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      statistic_data = #{record.statisticData,jdbcType=LONGVARCHAR},
      groups = #{record.groups,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update statistics_data
    set id = #{record.id,jdbcType=BIGINT},
      spout_name = #{record.spoutName,jdbcType=VARCHAR},
      model_name = #{record.modelName,jdbcType=VARCHAR},
      row_key = #{record.rowKey,jdbcType=VARCHAR},
      time_unit = #{record.timeUnit,jdbcType=TIMESTAMP},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>