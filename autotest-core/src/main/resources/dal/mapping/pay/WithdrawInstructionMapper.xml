<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dal.dao.pay.WithdrawInstructionDAO">
  <resultMap id="BaseResultMap" type="dal.model.pay.WithdrawInstructionDO">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="trans_type" jdbcType="VARCHAR" property="transType" />
    <result column="trans_tag" jdbcType="VARCHAR" property="transTag" />
    <result column="withdraw_type" jdbcType="VARCHAR" property="withdrawType" />
    <result column="biz_no" jdbcType="VARCHAR" property="bizNo" />
    <result column="req_id" jdbcType="VARCHAR" property="reqId" />
    <result column="gid" jdbcType="VARCHAR" property="gid" />
    <result column="partner_id" jdbcType="VARCHAR" property="partnerId" />
    <result column="merchant_order_no" jdbcType="VARCHAR" property="merchantOrderNo" />
    <result column="plat_partner_id" jdbcType="VARCHAR" property="platPartnerId" />
    <result column="plat_merchant_order_no" jdbcType="VARCHAR" property="platMerchantOrderNo" />
    <result column="merchant_mode" jdbcType="VARCHAR" property="merchantMode" />
    <result column="bank_card" jdbcType="VARCHAR" property="bankCard" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="account_no" jdbcType="VARCHAR" property="accountNo" />
    <result column="user_tag" jdbcType="VARCHAR" property="userTag" />
    <result column="freeze_code" jdbcType="VARCHAR" property="freezeCode" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="acc_biz_no" jdbcType="VARCHAR" property="accBizNo" />
    <result column="freeze_req_id" jdbcType="VARCHAR" property="freezeReqId" />
    <result column="unfreeze_req_id" jdbcType="VARCHAR" property="unfreezeReqId" />
    <result column="remittance_up_balance_req_id" jdbcType="VARCHAR" property="remittanceUpBalanceReqId" />
    <result column="partner_rate" jdbcType="INTEGER" property="partnerRate" />
    <result column="channel_rate" jdbcType="INTEGER" property="channelRate" />
    <result column="channel_biz_no" jdbcType="VARCHAR" property="channelBizNo" />
    <result column="channel_id" jdbcType="VARCHAR" property="channelId" />
    <result column="channel_name" jdbcType="VARCHAR" property="channelName" />
    <result column="pay_channel" jdbcType="VARCHAR" property="payChannel" />
    <result column="pay_channel_id" jdbcType="VARCHAR" property="payChannelId" />
    <result column="gw_biz_no" jdbcType="VARCHAR" property="gwBizNo" />
    <result column="file_info" jdbcType="VARCHAR" property="fileInfo" />
    <result column="file_serial" jdbcType="VARCHAR" property="fileSerial" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="settle_time" jdbcType="TIMESTAMP" property="settleTime" />
    <result column="bank_withdraw_serial" jdbcType="VARCHAR" property="bankWithdrawSerial" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="run_memo" jdbcType="VARCHAR" property="runMemo" />
    <result column="receipt" jdbcType="VARCHAR" property="receipt" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="externalMetaData" jdbcType="VARCHAR" property="externalmetadata" />
    <result column="extension_context" jdbcType="VARCHAR" property="extensionContext" />
    <result column="raw_add_time" jdbcType="TIMESTAMP" property="rawAddTime" />
    <result column="raw_update_time" jdbcType="TIMESTAMP" property="rawUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, trans_type, trans_tag, withdraw_type, biz_no, req_id, gid, partner_id, merchant_order_no, 
    plat_partner_id, plat_merchant_order_no, merchant_mode, bank_card, user_id, account_no, 
    user_tag, freeze_code, amount, balance, acc_biz_no, freeze_req_id, unfreeze_req_id, 
    remittance_up_balance_req_id, partner_rate, channel_rate, channel_biz_no, channel_id, 
    channel_name, pay_channel, pay_channel_id, gw_biz_no, file_info, file_serial, file_name, 
    apply_time, settle_time, bank_withdraw_serial, finish_time, status, state, code, 
    run_memo, receipt, description, memo, externalMetaData, extension_context, raw_add_time, 
    raw_update_time
  </sql>
  <select id="selectByExample" parameterType="dal.model.pay.WithdrawInstructionDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from withdraw_instruction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="dal.model.pay.WithdrawInstructionDOExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from withdraw_instruction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="dal.model.pay.WithdrawInstructionDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from withdraw_instruction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update withdraw_instruction
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.transType != null">
        trans_type = #{record.transType,jdbcType=VARCHAR},
      </if>
      <if test="record.transTag != null">
        trans_tag = #{record.transTag,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawType != null">
        withdraw_type = #{record.withdrawType,jdbcType=VARCHAR},
      </if>
      <if test="record.bizNo != null">
        biz_no = #{record.bizNo,jdbcType=VARCHAR},
      </if>
      <if test="record.reqId != null">
        req_id = #{record.reqId,jdbcType=VARCHAR},
      </if>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerId != null">
        partner_id = #{record.partnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantOrderNo != null">
        merchant_order_no = #{record.merchantOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.platPartnerId != null">
        plat_partner_id = #{record.platPartnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.platMerchantOrderNo != null">
        plat_merchant_order_no = #{record.platMerchantOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantMode != null">
        merchant_mode = #{record.merchantMode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCard != null">
        bank_card = #{record.bankCard,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNo != null">
        account_no = #{record.accountNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userTag != null">
        user_tag = #{record.userTag,jdbcType=VARCHAR},
      </if>
      <if test="record.freezeCode != null">
        freeze_code = #{record.freezeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.accBizNo != null">
        acc_biz_no = #{record.accBizNo,jdbcType=VARCHAR},
      </if>
      <if test="record.freezeReqId != null">
        freeze_req_id = #{record.freezeReqId,jdbcType=VARCHAR},
      </if>
      <if test="record.unfreezeReqId != null">
        unfreeze_req_id = #{record.unfreezeReqId,jdbcType=VARCHAR},
      </if>
      <if test="record.remittanceUpBalanceReqId != null">
        remittance_up_balance_req_id = #{record.remittanceUpBalanceReqId,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerRate != null">
        partner_rate = #{record.partnerRate,jdbcType=INTEGER},
      </if>
      <if test="record.channelRate != null">
        channel_rate = #{record.channelRate,jdbcType=INTEGER},
      </if>
      <if test="record.channelBizNo != null">
        channel_biz_no = #{record.channelBizNo,jdbcType=VARCHAR},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=VARCHAR},
      </if>
      <if test="record.channelName != null">
        channel_name = #{record.channelName,jdbcType=VARCHAR},
      </if>
      <if test="record.payChannel != null">
        pay_channel = #{record.payChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.payChannelId != null">
        pay_channel_id = #{record.payChannelId,jdbcType=VARCHAR},
      </if>
      <if test="record.gwBizNo != null">
        gw_biz_no = #{record.gwBizNo,jdbcType=VARCHAR},
      </if>
      <if test="record.fileInfo != null">
        file_info = #{record.fileInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSerial != null">
        file_serial = #{record.fileSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.settleTime != null">
        settle_time = #{record.settleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bankWithdrawSerial != null">
        bank_withdraw_serial = #{record.bankWithdrawSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.runMemo != null">
        run_memo = #{record.runMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.receipt != null">
        receipt = #{record.receipt,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.externalmetadata != null">
        externalMetaData = #{record.externalmetadata,jdbcType=VARCHAR},
      </if>
      <if test="record.extensionContext != null">
        extension_context = #{record.extensionContext,jdbcType=VARCHAR},
      </if>
      <if test="record.rawAddTime != null">
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null">
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update withdraw_instruction
    set id = #{record.id,jdbcType=BIGINT},
      trans_type = #{record.transType,jdbcType=VARCHAR},
      trans_tag = #{record.transTag,jdbcType=VARCHAR},
      withdraw_type = #{record.withdrawType,jdbcType=VARCHAR},
      biz_no = #{record.bizNo,jdbcType=VARCHAR},
      req_id = #{record.reqId,jdbcType=VARCHAR},
      gid = #{record.gid,jdbcType=VARCHAR},
      partner_id = #{record.partnerId,jdbcType=VARCHAR},
      merchant_order_no = #{record.merchantOrderNo,jdbcType=VARCHAR},
      plat_partner_id = #{record.platPartnerId,jdbcType=VARCHAR},
      plat_merchant_order_no = #{record.platMerchantOrderNo,jdbcType=VARCHAR},
      merchant_mode = #{record.merchantMode,jdbcType=VARCHAR},
      bank_card = #{record.bankCard,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      account_no = #{record.accountNo,jdbcType=VARCHAR},
      user_tag = #{record.userTag,jdbcType=VARCHAR},
      freeze_code = #{record.freezeCode,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      balance = #{record.balance,jdbcType=DECIMAL},
      acc_biz_no = #{record.accBizNo,jdbcType=VARCHAR},
      freeze_req_id = #{record.freezeReqId,jdbcType=VARCHAR},
      unfreeze_req_id = #{record.unfreezeReqId,jdbcType=VARCHAR},
      remittance_up_balance_req_id = #{record.remittanceUpBalanceReqId,jdbcType=VARCHAR},
      partner_rate = #{record.partnerRate,jdbcType=INTEGER},
      channel_rate = #{record.channelRate,jdbcType=INTEGER},
      channel_biz_no = #{record.channelBizNo,jdbcType=VARCHAR},
      channel_id = #{record.channelId,jdbcType=VARCHAR},
      channel_name = #{record.channelName,jdbcType=VARCHAR},
      pay_channel = #{record.payChannel,jdbcType=VARCHAR},
      pay_channel_id = #{record.payChannelId,jdbcType=VARCHAR},
      gw_biz_no = #{record.gwBizNo,jdbcType=VARCHAR},
      file_info = #{record.fileInfo,jdbcType=VARCHAR},
      file_serial = #{record.fileSerial,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      settle_time = #{record.settleTime,jdbcType=TIMESTAMP},
      bank_withdraw_serial = #{record.bankWithdrawSerial,jdbcType=VARCHAR},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      run_memo = #{record.runMemo,jdbcType=VARCHAR},
      receipt = #{record.receipt,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      externalMetaData = #{record.externalmetadata,jdbcType=VARCHAR},
      extension_context = #{record.extensionContext,jdbcType=VARCHAR},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>