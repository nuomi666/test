<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dal.dao.promotion.CouponCopyDAO">
  <resultMap id="BaseResultMap" type="dal.model.promotion.CouponCopyDO">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="jhy_coupon_id" jdbcType="VARCHAR" property="jhyCouponId" />
    <result column="coupon_id" jdbcType="VARCHAR" property="couponId" />
    <result column="inner_name" jdbcType="VARCHAR" property="innerName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="plat_partner_id" jdbcType="VARCHAR" property="platPartnerId" />
    <result column="partner_id" jdbcType="VARCHAR" property="partnerId" />
    <result column="instruction_id" jdbcType="VARCHAR" property="instructionId" />
    <result column="definition_id" jdbcType="VARCHAR" property="definitionId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="coupon_type" jdbcType="VARCHAR" property="couponType" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="amount_data" jdbcType="VARCHAR" property="amountData" />
    <result column="definition_json" jdbcType="VARCHAR" property="definitionJson" />
    <result column="taken_time" jdbcType="TIMESTAMP" property="takenTime" />
    <result column="applied_time" jdbcType="TIMESTAMP" property="appliedTime" />
    <result column="valid_start_time" jdbcType="TIMESTAMP" property="validStartTime" />
    <result column="valid_end_time" jdbcType="TIMESTAMP" property="validEndTime" />
    <result column="can_apply_time" jdbcType="TIMESTAMP" property="canApplyTime" />
    <result column="raw_add_time" jdbcType="TIMESTAMP" property="rawAddTime" />
    <result column="raw_update_time" jdbcType="TIMESTAMP" property="rawUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, jhy_coupon_id, coupon_id, inner_name, name, plat_partner_id, partner_id, instruction_id, 
    definition_id, user_id, coupon_type, status, amount_data, definition_json, taken_time, 
    applied_time, valid_start_time, valid_end_time, can_apply_time, raw_add_time, raw_update_time
  </sql>
  <select id="selectByExample" parameterType="dal.model.promotion.CouponCopyDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coupon_copy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="dal.model.promotion.CouponCopyDOExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from coupon_copy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="dal.model.promotion.CouponCopyDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from coupon_copy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update coupon_copy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jhyCouponId != null">
        jhy_coupon_id = #{record.jhyCouponId,jdbcType=VARCHAR},
      </if>
      <if test="record.couponId != null">
        coupon_id = #{record.couponId,jdbcType=VARCHAR},
      </if>
      <if test="record.innerName != null">
        inner_name = #{record.innerName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.platPartnerId != null">
        plat_partner_id = #{record.platPartnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerId != null">
        partner_id = #{record.partnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.instructionId != null">
        instruction_id = #{record.instructionId,jdbcType=VARCHAR},
      </if>
      <if test="record.definitionId != null">
        definition_id = #{record.definitionId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.couponType != null">
        coupon_type = #{record.couponType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.amountData != null">
        amount_data = #{record.amountData,jdbcType=VARCHAR},
      </if>
      <if test="record.definitionJson != null">
        definition_json = #{record.definitionJson,jdbcType=VARCHAR},
      </if>
      <if test="record.takenTime != null">
        taken_time = #{record.takenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.appliedTime != null">
        applied_time = #{record.appliedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validStartTime != null">
        valid_start_time = #{record.validStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validEndTime != null">
        valid_end_time = #{record.validEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.canApplyTime != null">
        can_apply_time = #{record.canApplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawAddTime != null">
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null">
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update coupon_copy
    set id = #{record.id,jdbcType=INTEGER},
      jhy_coupon_id = #{record.jhyCouponId,jdbcType=VARCHAR},
      coupon_id = #{record.couponId,jdbcType=VARCHAR},
      inner_name = #{record.innerName,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      plat_partner_id = #{record.platPartnerId,jdbcType=VARCHAR},
      partner_id = #{record.partnerId,jdbcType=VARCHAR},
      instruction_id = #{record.instructionId,jdbcType=VARCHAR},
      definition_id = #{record.definitionId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      coupon_type = #{record.couponType,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      amount_data = #{record.amountData,jdbcType=VARCHAR},
      definition_json = #{record.definitionJson,jdbcType=VARCHAR},
      taken_time = #{record.takenTime,jdbcType=TIMESTAMP},
      applied_time = #{record.appliedTime,jdbcType=TIMESTAMP},
      valid_start_time = #{record.validStartTime,jdbcType=TIMESTAMP},
      valid_end_time = #{record.validEndTime,jdbcType=TIMESTAMP},
      can_apply_time = #{record.canApplyTime,jdbcType=TIMESTAMP},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>