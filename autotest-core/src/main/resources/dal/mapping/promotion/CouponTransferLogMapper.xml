<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dal.dao.promotion.CouponTransferLogDAO">
  <resultMap id="BaseResultMap" type="dal.model.promotion.CouponTransferLogDO">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gid" jdbcType="VARCHAR" property="gid" />
    <result column="req_id" jdbcType="VARCHAR" property="reqId" />
    <result column="instruction_id" jdbcType="VARCHAR" property="instructionId" />
    <result column="partner_id" jdbcType="VARCHAR" property="partnerId" />
    <result column="plat_partner_id" jdbcType="VARCHAR" property="platPartnerId" />
    <result column="donor_user_id" jdbcType="VARCHAR" property="donorUserId" />
    <result column="receive_user_id" jdbcType="VARCHAR" property="receiveUserId" />
    <result column="old_coupon_id" jdbcType="VARCHAR" property="oldCouponId" />
    <result column="new_coupon_id" jdbcType="VARCHAR" property="newCouponId" />
    <result column="definition_id" jdbcType="VARCHAR" property="definitionId" />
    <result column="amount_data" jdbcType="VARCHAR" property="amountData" />
    <result column="coupon_type" jdbcType="VARCHAR" property="couponType" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="inner_name" jdbcType="VARCHAR" property="innerName" />
    <result column="taken_time" jdbcType="TIMESTAMP" property="takenTime" />
    <result column="can_apply_time" jdbcType="TIMESTAMP" property="canApplyTime" />
    <result column="valid_end_time" jdbcType="TIMESTAMP" property="validEndTime" />
    <result column="raw_add_time" jdbcType="TIMESTAMP" property="rawAddTime" />
    <result column="raw_update_time" jdbcType="TIMESTAMP" property="rawUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, gid, req_id, instruction_id, partner_id, plat_partner_id, donor_user_id, receive_user_id, 
    old_coupon_id, new_coupon_id, definition_id, amount_data, coupon_type, name, inner_name, 
    taken_time, can_apply_time, valid_end_time, raw_add_time, raw_update_time
  </sql>
  <select id="selectByExample" parameterType="dal.model.promotion.CouponTransferLogDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coupon_transfer_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="dal.model.promotion.CouponTransferLogDOExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from coupon_transfer_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="dal.model.promotion.CouponTransferLogDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from coupon_transfer_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update coupon_transfer_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=VARCHAR},
      </if>
      <if test="record.reqId != null">
        req_id = #{record.reqId,jdbcType=VARCHAR},
      </if>
      <if test="record.instructionId != null">
        instruction_id = #{record.instructionId,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerId != null">
        partner_id = #{record.partnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.platPartnerId != null">
        plat_partner_id = #{record.platPartnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.donorUserId != null">
        donor_user_id = #{record.donorUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveUserId != null">
        receive_user_id = #{record.receiveUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.oldCouponId != null">
        old_coupon_id = #{record.oldCouponId,jdbcType=VARCHAR},
      </if>
      <if test="record.newCouponId != null">
        new_coupon_id = #{record.newCouponId,jdbcType=VARCHAR},
      </if>
      <if test="record.definitionId != null">
        definition_id = #{record.definitionId,jdbcType=VARCHAR},
      </if>
      <if test="record.amountData != null">
        amount_data = #{record.amountData,jdbcType=VARCHAR},
      </if>
      <if test="record.couponType != null">
        coupon_type = #{record.couponType,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.innerName != null">
        inner_name = #{record.innerName,jdbcType=VARCHAR},
      </if>
      <if test="record.takenTime != null">
        taken_time = #{record.takenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.canApplyTime != null">
        can_apply_time = #{record.canApplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validEndTime != null">
        valid_end_time = #{record.validEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawAddTime != null">
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null">
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update coupon_transfer_log
    set id = #{record.id,jdbcType=BIGINT},
      gid = #{record.gid,jdbcType=VARCHAR},
      req_id = #{record.reqId,jdbcType=VARCHAR},
      instruction_id = #{record.instructionId,jdbcType=VARCHAR},
      partner_id = #{record.partnerId,jdbcType=VARCHAR},
      plat_partner_id = #{record.platPartnerId,jdbcType=VARCHAR},
      donor_user_id = #{record.donorUserId,jdbcType=VARCHAR},
      receive_user_id = #{record.receiveUserId,jdbcType=VARCHAR},
      old_coupon_id = #{record.oldCouponId,jdbcType=VARCHAR},
      new_coupon_id = #{record.newCouponId,jdbcType=VARCHAR},
      definition_id = #{record.definitionId,jdbcType=VARCHAR},
      amount_data = #{record.amountData,jdbcType=VARCHAR},
      coupon_type = #{record.couponType,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      inner_name = #{record.innerName,jdbcType=VARCHAR},
      taken_time = #{record.takenTime,jdbcType=TIMESTAMP},
      can_apply_time = #{record.canApplyTime,jdbcType=TIMESTAMP},
      valid_end_time = #{record.validEndTime,jdbcType=TIMESTAMP},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>